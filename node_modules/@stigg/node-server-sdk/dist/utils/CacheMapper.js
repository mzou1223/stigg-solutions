"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dateUtils_1 = require("./dateUtils");
class CacheMapper {
    mapCachedEntitlement(entitlement) {
        var _a, _b, _c, _d;
        let feature = undefined;
        if (entitlement.feature) {
            feature = {
                id: (_a = entitlement.feature) === null || _a === void 0 ? void 0 : _a.refId,
                featureType: entitlement.feature.featureType,
                meterType: entitlement.feature.meterType || undefined,
                units: entitlement.feature.featureUnits || '',
                unitsPlural: entitlement.feature.featureUnitsPlural || '',
            };
        }
        return {
            calculatedEntitlement: {
                feature,
                resourceId: entitlement.resourceId || undefined,
                usageLimit: entitlement.usageLimit,
                hasUnlimitedUsage: entitlement.hasUnlimitedUsage,
                hasSoftLimit: !!entitlement.hasSoftLimit,
                accessDeniedReason: entitlement.accessDeniedReason || undefined,
                enumValues: entitlement.enumValues || [],
            },
            featureUsage: {
                resetPeriod: entitlement.resetPeriod,
                resetPeriodConfiguration: entitlement.resetPeriodConfiguration,
                currentUsage: entitlement.currentUsage || 0,
                usagePeriodAnchor: (_b = (0, dateUtils_1.mapDate)(entitlement.usagePeriodAnchor)) === null || _b === void 0 ? void 0 : _b.getTime(),
                usagePeriodStart: (_c = (0, dateUtils_1.mapDate)(entitlement.usagePeriodStart)) === null || _c === void 0 ? void 0 : _c.getTime(),
                usagePeriodEnd: (_d = (0, dateUtils_1.mapDate)(entitlement.usagePeriodEnd)) === null || _d === void 0 ? void 0 : _d.getTime(),
            },
        };
    }
    mapCachedEntitlements(updatedEntitlements) {
        return new Map(updatedEntitlements.map((entitlement) => {
            var _a;
            return [
                ((_a = entitlement.feature) === null || _a === void 0 ? void 0 : _a.refId) || '',
                this.mapCachedEntitlement(entitlement),
            ];
        }));
    }
}
exports.default = CacheMapper;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FjaGVNYXBwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMvQ2FjaGVNYXBwZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSwyQ0FBc0M7QUFFdEMsTUFBcUIsV0FBVztJQUM5QixvQkFBb0IsQ0FBQyxXQUFnQzs7UUFDbkQsSUFBSSxPQUFPLEdBQUcsU0FBUyxDQUFDO1FBQ3hCLElBQUksV0FBVyxDQUFDLE9BQU8sRUFBRTtZQUN2QixPQUFPLEdBQUc7Z0JBQ1IsRUFBRSxFQUFFLE1BQUEsV0FBVyxDQUFDLE9BQU8sMENBQUUsS0FBSztnQkFDOUIsV0FBVyxFQUFFLFdBQVcsQ0FBQyxPQUFPLENBQUMsV0FBVztnQkFDNUMsU0FBUyxFQUFFLFdBQVcsQ0FBQyxPQUFPLENBQUMsU0FBUyxJQUFJLFNBQVM7Z0JBQ3JELEtBQUssRUFBRSxXQUFXLENBQUMsT0FBTyxDQUFDLFlBQVksSUFBSSxFQUFFO2dCQUM3QyxXQUFXLEVBQUUsV0FBVyxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsSUFBSSxFQUFFO2FBQzFELENBQUM7U0FDSDtRQUNELE9BQU87WUFDTCxxQkFBcUIsRUFBRTtnQkFDckIsT0FBTztnQkFDUCxVQUFVLEVBQUUsV0FBVyxDQUFDLFVBQVUsSUFBSSxTQUFTO2dCQUMvQyxVQUFVLEVBQUUsV0FBVyxDQUFDLFVBQVU7Z0JBQ2xDLGlCQUFpQixFQUFFLFdBQVcsQ0FBQyxpQkFBaUI7Z0JBQ2hELFlBQVksRUFBRSxDQUFDLENBQUMsV0FBVyxDQUFDLFlBQVk7Z0JBQ3hDLGtCQUFrQixFQUFFLFdBQVcsQ0FBQyxrQkFBa0IsSUFBSSxTQUFTO2dCQUMvRCxVQUFVLEVBQUUsV0FBVyxDQUFDLFVBQVUsSUFBSSxFQUFFO2FBQ3pDO1lBQ0QsWUFBWSxFQUFFO2dCQUNaLFdBQVcsRUFBRSxXQUFXLENBQUMsV0FBVztnQkFDcEMsd0JBQXdCLEVBQUUsV0FBVyxDQUFDLHdCQUF3QjtnQkFDOUQsWUFBWSxFQUFFLFdBQVcsQ0FBQyxZQUFZLElBQUksQ0FBQztnQkFDM0MsaUJBQWlCLEVBQUUsTUFBQSxJQUFBLG1CQUFPLEVBQUMsV0FBVyxDQUFDLGlCQUFpQixDQUFDLDBDQUFFLE9BQU8sRUFBRTtnQkFDcEUsZ0JBQWdCLEVBQUUsTUFBQSxJQUFBLG1CQUFPLEVBQUMsV0FBVyxDQUFDLGdCQUFnQixDQUFDLDBDQUFFLE9BQU8sRUFBRTtnQkFDbEUsY0FBYyxFQUFFLE1BQUEsSUFBQSxtQkFBTyxFQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsMENBQUUsT0FBTyxFQUFFO2FBQy9EO1NBQ0YsQ0FBQztJQUNKLENBQUM7SUFFRCxxQkFBcUIsQ0FBQyxtQkFBMEM7UUFDOUQsT0FBTyxJQUFJLEdBQUcsQ0FDWixtQkFBbUIsQ0FBQyxHQUFHLENBQUMsQ0FBQyxXQUFXLEVBQUUsRUFBRTs7WUFBQyxPQUFBO2dCQUN2QyxDQUFBLE1BQUEsV0FBVyxDQUFDLE9BQU8sMENBQUUsS0FBSyxLQUFJLEVBQUU7Z0JBQ2hDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxXQUFXLENBQUM7YUFDdkMsQ0FBQTtTQUFBLENBQUMsQ0FDSCxDQUFDO0lBQ0osQ0FBQztDQUNGO0FBekNELDhCQXlDQyJ9