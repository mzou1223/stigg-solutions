"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateConfiguration = exports.getConfiguration = exports.DEFAULT_ENTITLEMENTS_TIMEOUT = exports.DEFAULT_TIMEOUT = exports.SDK_NAME = exports.SDK_SOURCE_TYPE = void 0;
const sdk_1 = require("@stigg/api-client-js/src/generated/sdk");
const loggerService_1 = require("./services/loggerService");
const lodash_1 = require("lodash");
const v8_1 = __importDefault(require("v8"));
exports.SDK_SOURCE_TYPE = sdk_1.SourceType.NodeServerSdk;
exports.SDK_NAME = 'node-server-sdk';
exports.DEFAULT_TIMEOUT = 60 * 1000;
exports.DEFAULT_ENTITLEMENTS_TIMEOUT = 10 * 1000;
const LOCALHOST_IPS = ['localhost', '127.0.0.1', '::1'];
function getDefaultMemoryCacheMaxSizeBytes() {
    return v8_1.default.getHeapStatistics().total_available_size * 0.75;
}
const defaults = () => {
    const baseUri = 'https://api.stigg.io';
    return {
        baseUri,
        wsUrl: getWsUrl(baseUri),
        baseEdgeUri: getBaseEdgeApiUri(baseUri),
        logConfiguration: {
            logger: console,
            logLevel: loggerService_1.LogLevel.ERROR,
        },
        timeout: exports.DEFAULT_TIMEOUT,
        entitlementsTimeout: exports.DEFAULT_ENTITLEMENTS_TIMEOUT,
        realtimeUpdatesEnabled: true,
        enableEdge: true,
        memoryCacheMaxSizeBytes: getDefaultMemoryCacheMaxSizeBytes(),
        enableRemoteConfig: true,
    };
};
const defaultRedisOptions = () => ({
    commandTimeout: 60000,
    retryStrategy: (times) => {
        const baseDelay = Math.min(2 ** times * 100, 8000);
        const jitter = Math.floor(Math.random() * 500);
        return baseDelay + jitter;
    },
});
function getConfiguration(configuration) {
    const defaultConfig = defaults();
    const wsUrl = configuration.wsUrl
        ? configuration.wsUrl
        : configuration.baseUri
            ? getWsUrl(configuration.baseUri)
            : defaultConfig.wsUrl;
    const baseEdgeUri = configuration.baseEdgeUri
        ? configuration.baseEdgeUri
        : configuration.baseUri
            ? getBaseEdgeApiUri(configuration.baseUri)
            : defaultConfig.baseEdgeUri;
    const redis = configuration.redis ? (0, lodash_1.merge)(defaultRedisOptions(), configuration.redis) : undefined;
    return (0, lodash_1.merge)(defaultConfig, configuration, { wsUrl, baseEdgeUri, redis });
}
exports.getConfiguration = getConfiguration;
function getWsUrl(apiUrl) {
    const url = new URL(apiUrl);
    if (url.protocol === 'http:') {
        url.protocol = 'ws:';
    }
    else if (url.protocol === 'https:') {
        url.protocol = 'wss:';
    }
    // Remove last char since URL.toString() adds a redundant backslash
    return url.toString().slice(0, -1);
}
function getBaseEdgeApiUri(apiUrl) {
    const url = new URL(apiUrl);
    if (LOCALHOST_IPS.includes(url.hostname)) {
        url.port = '3060';
    }
    else {
        url.hostname = `edge.${url.hostname}`;
    }
    // Remove last char since URL.toString() adds a redundant backslash
    return url.toString().slice(0, -1);
}
/**
 * We are validating here configuration that is required in order to initiate a new client, otherwise we return error
 */
function validateConfiguration(configuration, loggerService) {
    if (!configuration.apiKey) {
        const error = 'You must configure the client with an API key';
        loggerService.error(error);
        throw new Error(error);
    }
}
exports.validateConfiguration = validateConfiguration;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9jb25maWd1cmF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGdFQUFvRTtBQUNwRSw0REFBcUY7QUFFckYsbUNBQStCO0FBRS9CLDRDQUFvQjtBQUVQLFFBQUEsZUFBZSxHQUFHLGdCQUFVLENBQUMsYUFBYSxDQUFDO0FBQzNDLFFBQUEsUUFBUSxHQUFHLGlCQUFpQixDQUFDO0FBRTdCLFFBQUEsZUFBZSxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUM7QUFDNUIsUUFBQSw0QkFBNEIsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDO0FBRXRELE1BQU0sYUFBYSxHQUFHLENBQUMsV0FBVyxFQUFFLFdBQVcsRUFBRSxLQUFLLENBQUMsQ0FBQztBQStDeEQsU0FBUyxpQ0FBaUM7SUFDeEMsT0FBTyxZQUFFLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxvQkFBb0IsR0FBRyxJQUFJLENBQUM7QUFDNUQsQ0FBQztBQUVELE1BQU0sUUFBUSxHQUFHLEdBQWlDLEVBQUU7SUFDbEQsTUFBTSxPQUFPLEdBQUcsc0JBQXNCLENBQUM7SUFDdkMsT0FBTztRQUNMLE9BQU87UUFDUCxLQUFLLEVBQUUsUUFBUSxDQUFDLE9BQU8sQ0FBQztRQUN4QixXQUFXLEVBQUUsaUJBQWlCLENBQUMsT0FBTyxDQUFDO1FBQ3ZDLGdCQUFnQixFQUFFO1lBQ2hCLE1BQU0sRUFBRSxPQUFPO1lBQ2YsUUFBUSxFQUFFLHdCQUFRLENBQUMsS0FBSztTQUN6QjtRQUNELE9BQU8sRUFBRSx1QkFBZTtRQUN4QixtQkFBbUIsRUFBRSxvQ0FBNEI7UUFDakQsc0JBQXNCLEVBQUUsSUFBSTtRQUM1QixVQUFVLEVBQUUsSUFBSTtRQUNoQix1QkFBdUIsRUFBRSxpQ0FBaUMsRUFBRTtRQUM1RCxrQkFBa0IsRUFBRSxJQUFJO0tBQ3pCLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLG1CQUFt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