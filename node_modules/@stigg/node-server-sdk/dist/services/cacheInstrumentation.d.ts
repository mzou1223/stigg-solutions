import { TypedEventEmitter } from './eventEmitter';
export interface CacheHit {
    customerId: string;
    resourceId?: string;
}
export interface CacheMiss extends CacheHit {
    globalCustomerMissing?: boolean;
}
export declare class CacheInstrumentation {
    private readonly eventEmitter;
    constructor(eventEmitter: TypedEventEmitter);
    trackHit(data: CacheHit): void;
    trackMiss(data: CacheMiss): void;
    trackRedisClientError(data: {
        error: Error;
        clientName: 'redis' | 'redlock' | 'subscribe';
    }): void;
}
