import { ApolloClient, NormalizedCacheObject } from '@apollo/client/core';
import { LoggerService } from './loggerService';
import { TypedEventEmitter } from './eventEmitter';
import { EntitlementsService } from './entitlementsService';
import { InMemoryCacheService } from './cache/inMemoryCacheService';
import { EdgeApiClient } from './EdgeApiClient';
import { RefetchEntityEntitlementsAfterCacheMissParams } from './entitlementsService.utils';
export declare class InMemoryEntitlementsService extends EntitlementsService {
    protected readonly cacheService: InMemoryCacheService;
    private readonly eventEmitter;
    private entitlementsSubscription;
    private usageSubscription;
    private packagePublished;
    constructor(cacheService: InMemoryCacheService, client: ApolloClient<NormalizedCacheObject>, eventEmitter: TypedEventEmitter, loggerService: LoggerService, edgeApiClient: EdgeApiClient | null, entitlementsTimeout: number);
    init(): void;
    private websocketErrorHandling;
    cleanup(): void;
    private onEntitlementsUpdated;
    private onUsageUpdated;
    private isErrorRecoverable;
    clearCache(): void;
    private onPackagePublished;
    protected refetchEntityEntitlementsAfterCacheMiss(params: RefetchEntityEntitlementsAfterCacheMissParams): Promise<import("./entitlementsService.utils").EntitlementsResponseCacheHit>;
}
