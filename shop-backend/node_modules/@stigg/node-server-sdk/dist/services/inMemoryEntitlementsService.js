"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InMemoryEntitlementsService = void 0;
const sdk_1 = require("@stigg/api-client-js/src/generated/sdk");
const entitlementsService_1 = require("./entitlementsService");
const ReuseOngoingExecution_1 = require("../utils/decorators/ReuseOngoingExecution");
const lodash_1 = require("lodash");
const WS_ERROR_RECONNECT_INTERVAL_MS = 5 * 1000;
class InMemoryEntitlementsService extends entitlementsService_1.EntitlementsService {
    constructor(cacheService, client, eventEmitter, loggerService, edgeApiClient, entitlementsTimeout) {
        super(client, loggerService, edgeApiClient, cacheService, entitlementsTimeout);
        this.cacheService = cacheService;
        this.eventEmitter = eventEmitter;
        this.entitlementsSubscription = null;
        this.usageSubscription = null;
        this.packagePublished = null;
    }
    init() {
        this.loggerService.log('Subscribing to real-time updates');
        this.cleanup();
        this.entitlementsSubscription = this.entitlementsApi.subscribeEntitlementsUpdated().subscribe((value) => this.onEntitlementsUpdated(value), (err) => this.websocketErrorHandling(err));
        this.usageSubscription = this.entitlementsApi.subscribeUsageUpdated().subscribe((value) => this.onUsageUpdated(value), (err) => this.websocketErrorHandling(err));
        this.packagePublished = this.entitlementsApi.subscribePackagePublished().subscribe((value) => this.onPackagePublished(value), (err) => this.websocketErrorHandling(err));
        this.isInitialized = true;
    }
    websocketErrorHandling(err) {
        const isErrorRecoverable = this.isErrorRecoverable(err);
        const actionDescription = isErrorRecoverable ? 'retrying to connect' : 'giving up permanently';
        const errorReason = err.message || err.reason;
        const logMessage = `Received error while handling websocket events. Error: ${errorReason} - ${actionDescription}`;
        const isThrottleError = errorReason.includes('ThrottlerException');
        if (isThrottleError) {
            this.loggerService.log(logMessage);
        }
        else {
            this.loggerService.error(logMessage);
        }
        if (isErrorRecoverable) {
            this.cleanup();
            setTimeout(() => this.init(), WS_ERROR_RECONNECT_INTERVAL_MS);
        }
    }
    cleanup() {
        var _a, _b, _c;
        (_a = this.entitlementsSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();
        this.entitlementsSubscription = null;
        (_b = this.usageSubscription) === null || _b === void 0 ? void 0 : _b.unsubscribe();
        this.usageSubscription = null;
        (_c = this.packagePublished) === null || _c === void 0 ? void 0 : _c.unsubscribe();
        this.packagePublished = null;
        this.cacheService.clearCache();
        this.isInitialized = false;
    }
    onEntitlementsUpdated(result) {
        if (result.errors || !result.data) {
            this.loggerService.error(`Failed to handle entitlements updated event. Errors: ${result.errors}`, {
                errors: JSON.stringify(result.errors),
            });
            return;
        }
        const entitlementsUpdated = result.data.entitlementsUpdated;
        this.loggerService.debug(`Entitlements updated event arrived.`, {
            customerId: entitlementsUpdated.customerId,
            entitlements: entitlementsUpdated.entitlements,
        });
        const entitlements = this.cacheMapper.mapCachedEntitlements(entitlementsUpdated.entitlements);
        this.cacheService.setCustomer(entitlementsUpdated.customerId, entitlements, entitlementsUpdated.resourceId || undefined);
        this.eventEmitter.emit('entitlementsUpdated', entitlementsUpdated);
    }
    onUsageUpdated(result) {
        if (result.errors || !result.data) {
            this.loggerService.error(`Failed to handle usage updated event. Errors: ${result.errors}`, {
                errors: JSON.stringify(result.errors),
            });
            return;
        }
        const { usage: { customerId, featureId, resourceId, currentUsage, usagePeriodStart, usagePeriodEnd }, } = result.data.usageUpdated;
        this.loggerService.debug(`Usage updated event arrived.`, {
            customerId: customerId,
            featureId: featureId,
            resourceId: resourceId,
            currentUsage: currentUsage,
            usagePeriodStart: usagePeriodStart,
            usagePeriodEnd: usagePeriodEnd,
        });
        const wasSet = this.cacheService.updateFeatureUsage({
            timestamp: new Date(),
            customerId,
            resourceId: resourceId || undefined,
            featureId,
            currentUsage,
            usagePeriodStart: usagePeriodStart || undefined,
            usagePeriodEnd: usagePeriodEnd || undefined,
        });
        if (wasSet) {
            this.eventEmitter.emit('usageUpdated', result.data.usageUpdated);
        }
    }
    isErrorRecoverable(err) {
        const isInvalidAPIKeyError = err.reason === 'Invalid API key';
        return !isInvalidAPIKeyError;
    }
    clearCache() {
        return this.cacheService.clearCache();
    }
    onPackagePublished(result) {
        var _a, _b;
        if (result.errors || !result.data) {
            this.loggerService.error(`Failed to handle package published event. Errors: ${result.errors}`, {
                errors: JSON.stringify(result.errors),
            });
            return;
        }
        this.loggerService.debug(`Package published event arrived.`, {
            data: (_a = result.data) === null || _a === void 0 ? void 0 : _a.packagePublished,
        });
        if (((_b = result.data) === null || _b === void 0 ? void 0 : _b.packagePublished.migrationType) === sdk_1.PublishMigrationType.AllCustomers) {
            this.loggerService.log('Clearing cache due to package published event');
            this.clearCache();
        }
        this.eventEmitter.emit('packagePublished', result.data.packagePublished);
    }
    async refetchEntityEntitlementsAfterCacheMiss(params) {
        return this.refetchEntitlements(params);
    }
}
__decorate([
    (0, ReuseOngoingExecution_1.ReuseOngoingExecution)(({ customerId, resourceId }) => (0, lodash_1.compact)([customerId, resourceId]).join(':'))
], InMemoryEntitlementsService.prototype, "refetchEntityEntitlementsAfterCacheMiss", null);
exports.InMemoryEntitlementsService = InMemoryEntitlementsService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5NZW1vcnlFbnRpdGxlbWVudHNTZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NlcnZpY2VzL2luTWVtb3J5RW50aXRsZW1lbnRzU2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFDQSxnRUFLZ0Q7QUFHaEQsK0RBQTREO0FBSTVELHFGQUFrRjtBQUNsRixtQ0FBaUM7QUFHakMsTUFBTSw4QkFBOEIsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDO0FBRWhELE1BQWEsMkJBQTRCLFNBQVEseUNBQW1CO0lBS2xFLFlBQ3FCLFlBQWtDLEVBQ3JELE1BQTJDLEVBQzFCLFlBQStCLEVBQ2hELGFBQTRCLEVBQzVCLGFBQW1DLEVBQ25DLG1CQUEyQjtRQUUzQixLQUFLLENBQUMsTUFBTSxFQUFFLGFBQWEsRUFBRSxhQUFhLEVBQUUsWUFBWSxFQUFFLG1CQUFtQixDQUFDLENBQUM7UUFQNUQsaUJBQVksR0FBWixZQUFZLENBQXNCO1FBRXBDLGlCQUFZLEdBQVosWUFBWSxDQUFtQjtRQVAxQyw2QkFBd0IsR0FBa0MsSUFBSSxDQUFDO1FBQy9ELHNCQUFpQixHQUFrQyxJQUFJLENBQUM7UUFDeEQscUJBQWdCLEdBQWtDLElBQUksQ0FBQztJQVcvRCxDQUFDO0lBRVEsSUFBSTtRQUNYLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLGtDQUFrQyxDQUFDLENBQUM7UUFFM0QsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBRWYsSUFBSSxDQUFDLHdCQUF3QixHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsNEJBQTRCLEVBQUUsQ0FBQyxTQUFTLENBQzNGLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDLEVBQzVDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsR0FBRyxDQUFDLENBQzFDLENBQUM7UUFFRixJ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