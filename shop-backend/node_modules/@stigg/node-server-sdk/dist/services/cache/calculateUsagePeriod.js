"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.calculateUsagePeriod = void 0;
const sdk_1 = require("@stigg/api-client-js/src/generated/sdk");
const dayjs_1 = __importDefault(require("dayjs"));
function getPeriodUnit(resetPeriod) {
    switch (resetPeriod) {
        case sdk_1.EntitlementResetPeriod.Year:
            return 'years';
        case sdk_1.EntitlementResetPeriod.Month:
            return 'months';
        case sdk_1.EntitlementResetPeriod.Week:
            return 'weeks';
        case sdk_1.EntitlementResetPeriod.Day:
            return 'days';
        case sdk_1.EntitlementResetPeriod.Hour:
            return 'hours';
        default:
            throw new Error('Unsupported reset period');
    }
}
function calculateUsagePeriod(usagePeriodAnchor, baseDate, resetPeriod) {
    const now = (0, dayjs_1.default)(baseDate);
    const anchor = (0, dayjs_1.default)(usagePeriodAnchor);
    const period = getPeriodUnit(resetPeriod);
    const numberOfCompletePeriodCycles = Math.floor(now.diff(anchor, period, true));
    const usagePeriodStart = anchor.clone().add(numberOfCompletePeriodCycles, period);
    const usagePeriodEnd = anchor.clone().add(numberOfCompletePeriodCycles + 1, period);
    return {
        usagePeriodStart: usagePeriodStart.toDate(),
        usagePeriodEnd: usagePeriodEnd.toDate(),
    };
}
exports.calculateUsagePeriod = calculateUsagePeriod;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsY3VsYXRlVXNhZ2VQZXJpb2QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2VydmljZXMvY2FjaGUvY2FsY3VsYXRlVXNhZ2VQZXJpb2QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsZ0VBQWdGO0FBQ2hGLGtEQUE4QztBQUU5QyxTQUFTLGFBQWEsQ0FBQyxXQUFtQztJQUN4RCxRQUFRLFdBQVcsRUFBRTtRQUNuQixLQUFLLDRCQUFzQixDQUFDLElBQUk7WUFDOUIsT0FBTyxPQUFPLENBQUM7UUFDakIsS0FBSyw0QkFBc0IsQ0FBQyxLQUFLO1lBQy9CLE9BQU8sUUFBUSxDQUFDO1FBQ2xCLEtBQUssNEJBQXNCLENBQUMsSUFBSTtZQUM5QixPQUFPLE9BQU8sQ0FBQztRQUNqQixLQUFLLDRCQUFzQixDQUFDLEdBQUc7WUFDN0IsT0FBTyxNQUFNLENBQUM7UUFDaEIsS0FBSyw0QkFBc0IsQ0FBQyxJQUFJO1lBQzlCLE9BQU8sT0FBTyxDQUFDO1FBQ2pCO1lBQ0UsTUFBTSxJQUFJLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO0tBQy9DO0FBQ0gsQ0FBQztBQUVELFNBQWdCLG9CQUFvQixDQUFDLGlCQUF1QixFQUFFLFFBQWMsRUFBRSxXQUFtQztJQUMvRyxNQUFNLEdBQUcsR0FBRyxJQUFBLGVBQUssRUFBQyxRQUFRLENBQUMsQ0FBQztJQUM1QixNQUFNLE1BQU0sR0FBRyxJQUFBLGVBQUssRUFBQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQ3hDLE1BQU0sTUFBTSxHQUFHLGFBQWEsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUUxQyxNQUFNLDRCQUE0QixHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDaEYsTUFBTSxnQkFBZ0IsR0FBRyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsR0FBRyxDQUFDLDRCQUE0QixFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ2xGLE1BQU0sY0FBYyxHQUFHLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLENBQUMsNEJBQTRCLEdBQUcsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBRXBGLE9BQU87UUFDTCxnQkFBZ0IsRUFBRSxnQkFBZ0IsQ0FBQyxNQUFNLEVBQUU7UUFDM0MsY0FBYyxFQUFFLGNBQWMsQ0FBQyxNQUFNLEVBQUU7S0FDeEMsQ0FBQztBQUNKLENBQUM7QUFiRCxvREFhQyJ9